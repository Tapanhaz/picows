name: release

on:
  push:
    tags:
      - v*

jobs:

  build-sdist:
    runs-on: ubuntu-latest
    permissions:
      id-token: write

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install build
      run: |
        python -m pip install --upgrade pip
        pip install build cibuildwheel

    - name: Create source dist
      run: python -m build -s

    - name: Publish source dist to github
      uses: actions/upload-artifact@v4
      with:
        name: dist-src
        path: dist/*.tar.*

  build-wheels-matrix:
    runs-on: ubuntu-latest
    outputs:
      include: ${{ steps.set-matrix.outputs.include }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: "3.x"
      - run: pip install cibuildwheel==2.20.0
      - id: set-matrix
        run: |
          MATRIX_INCLUDE=$(
            {
              cibuildwheel --print-build-identifiers --platform linux --arch x86_64,aarch64 | grep cp |  jq -nRc '{"only": inputs, "os": "ubuntu-latest"}' \
              && cibuildwheel --print-build-identifiers --platform macos --arch x86_64,arm64 | grep cp |  jq -nRc '{"only": inputs, "os": "macos-latest"}' \
              && cibuildwheel --print-build-identifiers --platform windows --arch x86,AMD64 | grep cp |  jq -nRc '{"only": inputs, "os": "windows-latest"}'
            } | jq -sc
          )
          echo "include=$MATRIX_INCLUDE" >> $GITHUB_OUTPUT

  build-wheels:
    needs: build-wheels-matrix
    runs-on: ${{ matrix.os }}
    name: Build ${{ matrix.only }}
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJson(needs.build-wheels-matrix.outputs.include) }}


    defaults:
      run:
        shell: bash

    env:
      PIP_DISABLE_PIP_VERSION_CHECK: 1

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 50
          submodules: true

      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v3

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.20.0
        with:
          only: ${{ matrix.only }}
        env:
          CIBW_BUILD_VERBOSITY: 1

      - uses: actions/upload-artifact@v4
        with:
          name: dist-${{ matrix.only }}
          path: wheelhouse/*.whl


  publish:
    needs: [build-sdist, build-wheels]
    runs-on: ubuntu-latest
    permissions:
      id-token: write

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 5
        submodules: false

    - uses: actions/download-artifact@v4
      with:
        path: dist/
        pattern: dist-*
        merge-multiple: true

    - run: |
        ls -al dist/

    - name: Publish package distributions to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1


